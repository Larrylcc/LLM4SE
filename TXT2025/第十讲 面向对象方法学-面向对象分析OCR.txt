面向对象分析 1软件工程
第四部分  面向对象方法学
面向对象分析
10.1 需求获取
10.2 面向对象分析
10.3 面向对象的分析 :
案例分析 (略)
面向对象分析 210.1需求获取
◼需求获取的目标是确定用户“需要”什么样的软
件产品。就是说， 新的软件必须能够做什么 。
✓没有专业的系统分析人员， 用户很难了解到需
要开发什么相关信息和功能；
✓另一方面，没有与用户的交流， 系统分析 人员
也很难弄清客户真正需要什么。
◼发现用户需求的过程称为 需求获取 。一旦提出了
最初的需求，进一步推敲、细化和扩充的过程称
为需求分析 。
面向对象分析 3◼需求获取的第一步是 理解应用领域 ，即目标软件
的应用环境。如银行、电信公司、书店等。
◼一旦系统分析人员对该领域有了充分了解，就可
以建立一个业务模型 ，描述用户的业务过程，确
定用户的初始需求。然后通过迭代，更深入了解
应用领域，回过头来推敲业务模型。
◼这种迭代过程直到双方对需求的理解达到共识。
◼需求获取的结果是 导出用户可理解的系统规格说
明。
面向对象分析 4开发用户需求的典型过程
1. 识别用户需求
2. 访谈用户代表
     识别各种需要与要求
     使用工具帮助表达用户需求
     绘制 GUI草图
     确定硬件环境
3. 用标准文档格式撰写客户需求
4. 核查用户需求请用户评审
用户批准后
5. 构建详细需求（分析建模）
面向对象分析 510.1.1与用户交互
1) 需求的来源
◼不同类型应用能从人员处获取需求的比例 :
相对低的 相对高的 从人群获取需求的大概百分比应
用
的
类
型
高度受限的不受限制的
导弹制导系统航班控制系统公司财务系统增强版制造控制系统公司财务系统视频游戏. 
个. 
面向对象分析 6◼限制是指受客观物理规律的限制。如导弹制导
系统更多地受物理运动定律的限制，而非人的
决策。视频游戏的大部分需求依赖人，因为它
是一个想象出来的产品。
◼应用受到的限制越少，能从人们那里获得的需
求比例越大。
面向对象分析 72) 识别利益相关者（ stakeholder ）
◼对项目承担风险和享有利益的人即为利益相关
者。他们是应用的“客户”。如公司高层、项
目经理、最终用户、系统开发人员等。
◼不同利益相关者之间的利益冲突会导致需求不
一致。如果需求冲突不能调和，项目就会陷入
困境，最后往往会被取消。
◼即使所有利益相关者的需求一致，也可能由于
实现代价高昂，需求不能得到完全满足。
面向对象分析 83) 了解客户的需求
✓一般客户希望得到一个产品，他们需要系统开
发人员帮助，明确自己的需要。
✓例如，有一个客户愿望框架： “一个角色扮演
游戏，它能模拟被扮演人物的全部或部分活动，
应对人们具有相当吸引力。”
面向对象分析 9✓完整的客户要求应当记录在需求文档的“概述”
部分。但需求中还有一些问题需要由系统分析
人员与客户商量，以明确这些需求。
✓例如游戏是否只允许玩家扮演一个角色还是可
以同时控制多个人物？当两个人相遇时会发生
什么事情？游戏是否可以联网对战等。
面向对象分析 104) 访谈和文档记录
◼大部分需求获取是人与人沟通的活动，这些活
动经过精心组织，以准确获得最好的效果。
◼准备和访谈客户的过程如下：
  
访谈之前
① 列出访谈的“客户”对象，并划分客户优先级
     最有可能决定项目成败的人
2.  安排加访谈
     准备录音访谈日程，设定开始和结束时间
     系统开发人员至少有两人参设备
面向对象分析 11访谈中
③注意倾听
不要处于被动状态：启发和鼓励
✓理解客户的需要并探索要求
✓采用用例图？或数据流图？状态图？
记录全部访谈内容
④安排补充会议
访谈之后
⑤根据标准模版撰写软件需求规格说明，打客户需
求草稿
⑥通过电子邮件征求客户意见
面向对象分析 12◼对于不同类型的应用， 用例方法 是一种获取和
表达需求的有效方法。
◼某些需求需要通过 数据流图 或状态图与用户沟
通。
面向对象分析 1310.1.2 描述客户需求
◼需求可以看成是应用与应用的外部代理（如用户）
之间的交互。 可利用用例作为表达工具 。
◼用例描述了系统外的参与者（ Actor）与应用之间
的交互情况。 主要注重用户对系统的看法 。
◼描述客户需求的过程如下：
1)  标识参与者     标识目标系统将支持的不同类
型的用户，可以是人、事件或其他系统。
2)  标识场景     用场景描述目标系统典型功能的
活动细节，并与用户沟通，加深开发人员对应
用领域的理解。
面向对象分析 143) 标识用例  当双方确定了一组场景后，开发人员
从该场景 抽象出一组用例，描述所有可能的情
况。用例表达了系统的范围。
4) 求精用例  细化每一个用例。引入带有出错处理
或带有异常处理的用例，描述系统的行为，保
证需求的描述是完全的。
5) 标识用例之间的关系   描述用例之间的依赖关
系，提取相同功能，建立 用例模型 。
6) 标识非功能需求   包括系统性能上的约束、文
档、使用资源、安全性和质量等需求。
面向对象分析 15◼需求获取期间，开发人员需要访问一些不同的信
息资源：
✓客户提供的与 应用领域相关的文档和手册 。
✓将被目标系统替代的 遗留系统 的技术文档。
✓最终用户和客户本人。
uc 蜕变规则设计用例图
蜕变规则设计
设计蜕变规则的
基本信息
设计蜕变规则的
规则内容用户
面向对象分析 16◼以“图书管理系统”为例，首先 标识参与者 ：
a)Librarian 图书管理员 ：创建、修改、删除借
阅者信息；添加、编辑、删除书目信息；添加、
编辑、删除图书信息。
b)Borrower 借阅者：借阅、预约、归还图书，
以及取消书目预约。
◼图书（ Book）是指某种书目（ Title）的某一流通
中的复本。例如“数学分析教程第二册”的  5 本
馆藏复本中的第  3 本。
面向对象分析 17◼识别用例 ：
a)BorrowBook ：借阅图书
b)ReturnBook ：返还图书
c)RecerveTitle ：预约某种书目
d)CancelReservation ：取消预约
e)MaintainBorrowerInfo ：维护借阅者信息，
包括创建、修改、取消借阅者账户
f)MaintainTitleInfo ：维护书目信息，包括添
加修改、删除书目信息
g)MaintainBookInfo ：维护图书信息，包括添
加、修改、删除图书信息
h)Login：登录
面向对象分析 18◼识别参与者与用例之间的关系（场景）
a)Borrower 执行 BorrowBook 、ReturnBook 、
ReserveTitle 、CancelReservation 等用例。
b)Borrower 是通过 Librarian 完成上述用例的工
作。则 Borrower 与Librarian 存在依赖关系。
c)Librarian 还与 MaintainBorrowerInfo 、
Main -tainTitleInfo 、 MaintainBookInfo 交互。
d)Librarian 还需要与用例 Login交互。
面向对象分析 19◼画出用例图
BorrowerLibrarianBorrowBook
ReturnBookReserveTitleCancelReservation<<uses>>
面向对象分析 20LibrarianLogin
MaintainTitleInfo
MaintainBookInfo
MaintainBorrowerInfo
面向对象分析 21◼用例 BorrowBook 的规格说明
1.1 前置条件：在此用例开始之前， Librarian 必
须登录到系统中。
1.2 后置条件：如果此用例执行成功，在系统中建
立并存储一条借阅记录，必要时需要删除预约
记录。如果执行不成功，系统状态不变。
面向对象分析 221.3 事件流
基本流
✓当Borrower 借阅某种书目，且 Librarian 选择
“借书”，则此用例启动。
①提供书目和借阅者信息。
②检索书目（ E-1）。
③确定该书目的物理复本（图书）是否在架上
（E-2）。
④检索借阅者（ E-3）。
⑤将图书交给借阅者。
⑥创建并存储借阅记录。
⑦删除预约记录。
面向对象分析 23候补流
  E-1：若该种书目不存在，系统显示提示信息，用
例终止。
  E-2：若该种图书都已借出，系统显示提示信息，
用例终止。
  E-3：系统中不存在该借阅者，系统显示提示信息，
用例终止。  
面向对象分析 2410.1.3 与用户沟通的其他工具
1) 数据流图
✓某些需求可以很自然地表述为处理元素之间的
数据流。
✓顶层图即为系统与外部实体的交互。
2) 状态图
✓有时把应用看作是几个状态下的应用，而在某
一确定时刻的应用始终明确地处于某个状态中。
这种状态划分对理解系统比较有益。
✓状态的具体内容到实现阶段会有确切的定义。
面向对象分析 25借书过程的数据流图
◼外部实体、数据流和数据存储都为候选对象管理员  1
借书
检验2
借书
登记 索书单借书证检验错误
借书信息日历  
借阅记录  借阅者信息  图书信息  借书证 图书
面向对象分析 26还书过程的数据流图
◼系统与外部实体、系统与数据存储的交互，构成
系统的接口。相应数据流构成接口数据。借阅者  3
还书
检验4
还书
登记检验错误
还书信息日历  
借阅记录  图书
面向对象分析 27图书（对象）的状态图
借出在架
丢失修补报废出借
返还
丢失
丢失注销损坏 上架
面向对象分析 28图书管理员借书操作的状态图
登记读
者信息
登记
借书
信息findTitle
（检索图书）login
（登录）
findBorrower
（查找借阅者）reserve
（预约）借书预约图书
手续
完成检验图书borrow
（借阅）
检查图书状态取消
findBook
（检索复本）setLoan
（设借阅状态）cancel
（取消）
close
（关闭）检验读者借书
面向对象分析 2910.1.4 草拟用户界面和其他接口
◼建立初始用户界面，是 原型方法 的一种，目的是
快速与客户沟通。客户通常在看到应用的图形用
户界面（GUI）才能相像到这个应用未来的样子。
◼开发用户界面的步骤如下：
1)  了解客户     深入了解最终用户的想法。根据用
户的层次，提供多种用户界面。
✓知识和经验层次 ：计算机素养、系统经验、
使用类似应用的经验、教育水平、阅读水平、
打字技能等。
面向对象分析 30✓用户的生理特征 ：年龄、性别、左右手习惯、
生理障碍等。
2)  理解业务功能     根据应用的整体意图来理解特
定用户界面的目的。功能界面出现的顺序 通常
可以反映用户处理日常业务的方式。
✓用户的任务和工作特征 ：应用的使用方式、
使用频率、雇员的流动率、任务的重要性、
任务的重复性、对培训的期望、工作类型等。
✓用户的心理特征 ：工作态度、能动性、认知
方式等。
面向对象分析 313)  理解优秀界面设计的原则     目的是加强视觉效
果。
✓确保应用的各个界面之间风格的一致性 ：习
惯、步骤、视觉和感觉、位置等。
✓揣测用户通常开始操作的地点
✓导航系统尽量简捷
✓使用分组和分层来强调重要性级别
4)  选择合适的窗口类型     五类窗口：
✓属性窗口 ：展示实体的属性
✓对话窗口 ：完成特定任务或命令的信息
面向对象分析 32✓消息窗口 ：提供信息
✓面板窗口 ：展示一组控件
✓弹出窗口 ：突出显示信息
5)  制作系统菜单     为用户提供一个稳定的、易于
理解的使用环境，可以方便地搜寻需要的选项。
✓提供一个主菜单
✓显示所有相关选择（仅局限于此）
✓将菜单结构与应用要完成的任务对应起来
✓尽量减少菜单的级数
面向对象分析 336)  选择合适的基于设备的控件     提供给用户，向系
统发送指示的实际手段，包括 鼠标、键盘、触摸
屏、绘图板、轨迹球、麦克风等。
7)  选择合适的基于界面的控件     即出现在屏幕上的
符号。用户通过这些符号向系统提出他的输入和
操作意图，包括 图标、按钮、复选框、单选框等。
8)  组织和安排窗口布局     多窗口的排列规则，如平
铺、层叠等。
9)  选择合适的颜色     尽量保持简捷和低调。颜色需
要和谐。
面向对象分析 3410.2  面向对象 分析
◼分析建模的目的是对来自客户的需求形式化。形
式化可以导致新的洞察和发现需求错误。
◼1999年NASA损失了一颗价值数亿美元的气象卫
星，据调查是因为列在度量表中的 控制数据出了
问题。不巧的是这个缺陷在灾难发生几天之前才
刚发现，如果在需求分析阶段就被识别出来就可
避免损失了。
◼避免需求错误或遗漏的第一道防线 就是把所有的
需求细化， 建立分析模型 。
面向对象分析 35
•Stability (𝑅1):
•Safe Distance (𝑅2):
•Compliance (𝑅3):  
•Comfort (𝑅4):
◼ADS 需求模型（ ASE2021 ）
面向对象分析 36◼分析模型由三个独立的模型构成：
✓由用例和场景表示的功能模型 ；
✓用类和对象表示的对象模型 ；
✓由状态图和顺序图表示的动态模型 。
◼在需求获取阶段得到的 用例模型 就是功能模型。
据此可导出分析 对象模型 和动态模型 。
◼分析中的类可以看作是 高层抽象 ，在后续阶段将
使用更多的细节实现。
面向对象分析 37◼注意 : 这些模型代表的是 来自客户的概念 ，而非实
际软件类或实际构件 。如数据库、子系统、会话
管理器、网络等， 不应出现在分析模型中，因为
这些概念仅与实现相关。
面向对象分析 38◼在分析对象模型中有三种类型的对象 :
✓实体对象 表示系统将跟踪的持久信息；
✓边界对象 表示参与者与系统之间的交互；
✓控制对象 负责用例的实现  。
◼可用 UML提供的衍型机制 ，区分不同类型对象。
Control
 Entity Boundary
边界对象        控制对象     实体对象
面向对象分析 39具有两个按钮的手表的分析类
◼使用实体对象 、边界对象 和控制对象 等概念对系
统建模时，常常需要提供一些简单的启发式规则
来指导开发人员使用这些概念，可以使用相应的
类来跟踪。<<entity>>
Day<<entity>>
Month<<entity>>
Year<<control>>
ChangeDateControl<<boundary>>
ButtonBoundary
<<boundary>>
LCDDisplayBoundary
面向对象分析 40◼分析建模活动包括以下步骤。
1) 标识实体对象
✓自然语言分析法     利用 Abbott启发式准则，将
语言成分映射为模型成分。
语言成分 模型成分 示例
专有名词 实例 人员乙
普通名词 类现场工作人员
Doing动词 操作 创建、提交、选择
Being动词 继承 是…的一种，是 …中的一个
Having动词 聚合 有…，由…组成，包括 …
情态动词 约束 必须是
形容词 属性 事件描述
面向对象分析 41✓自然语言分析法 主要关注用户术语 , 依赖 :
➢识别质量高度依赖人们的书写风格；
➢可能会出现许多无关词汇，或同义词。
✓检查每一个用例，标识 候选对象
➢用例中的连续名词 （如借阅事件） ；
➢系统需要跟踪的现实世界中的实体 （如借阅记
录、书目信息） ；
➢系统需要跟踪的现实世界中的活动 （如紧急情
况操作预案） ；
➢数据源（如借阅者、管理员） 。     
面向对象分析 422)标识边界对象
✓在用例图中，每一个 参与者至少要与一个 边界
对象交互。边界对象 收集来自参与者的信息，
将它们转换为可用于 实体对象 和控制对象 的表
示形式。
✓边界对象 对用户界面进行粗略的建模， 不涉及
如菜单项、滚动条等可视方面的细节 。
面向对象分析 43✓标识边界对象的启发式准则如下：
➢标识用户所需初始用例的 用户界面控制 ;
➢标识用户需要键入系统的 数据表格 ;
➢标识通知和系统用于 响应用户的消息 ;
➢当用例中有多个参与者时，根据构想的用户
界面来标识参与者的行为 ;
➢不要使用边界对象对接口的可视方面建模，
应使用用户原型对可视用户界面建模 ;
➢使用用户的术语来描述接口， 不要使用来自
设计和实现的术语 。
面向对象分析 443)标识控制对象
✓控制对象 负责协调 实体对象 和边界对象 。
✓控制对象没有在现实世界中具体的对应物，
它通常从边界对象处收集信息，并把这些信
息分配给实体对象。
面向对象分析 45图书管理系统中的实体对象
①Borrower ：借阅者。他们可以借阅、返还、预
约和取消预约。因为名字可能重复，可用借阅
者ID识别。
②Title：书目。它表明某一种书，通过 ISBN号码
识别。
③Book：图书。它表明某一种书目的具体物理复
本，通过馆藏号码识别。
④Loan：借阅记录。同一个人关于不同图书的借
阅记录是不同的。
⑤Reservation ：预约记录。
面向对象分析 46图书管理系统中的边界对象
①mainWindow ：主窗口。有借书、还书、预约、
取消预约、添加书目、修改书目、删除书目、
添加借阅者、修改借阅者、删除借阅者、添加
图书、删除图书等操作。
②BorrowerDialog ：借阅者对话框。有添加借阅
者、修改借阅者、删除借阅者等操作。
③FindBwrDialog ：弹出对话框。有根据借阅者 ID
查找借阅者的操作。
④TitleDialog ：书目对话框。有添加书目、修改书
目、删除书目等操作。
面向对象分析 47⑤FindTDialog ：弹出对话框。根据图书的 ISBN号
码查找书目。
⑥BorrowDialog ：借书对话框。根据书目的 ISBN
号码和借阅者信息，执行借阅动作，创建和保
存借阅记录。
⑦ReturnDialog ：还书对话框．根据图书的馆藏号
码，执行还书动作，删除借阅记录。
⑧ReserveDialog ：预约对话框。根据书目的 ISBN
号码和借阅者信息，执行预约、取消预约动作。
⑨MessageWindow ：显示提示信息窗口。
⑩LoginDialog ：输入用户名和密码的窗口。
面向对象分析 484)使用顺序图将用例映射为对象
✓顺序图将用例与对象联系起来，直观地描述
了用例（场景）行为在其参与对象之间是如
何实施的。
✓顺序图对用例中各参与对象之间的交互序列
进行建模 。每一个消息从一个对象（或参与
者）发送给另一个对象（或参与者）。消息
的接受就触发了一个操作。
✓通过顺序图，将 责任以操作集合的形式分配
给每一个对象 。如果一个对象参与到多个用
例，则其操作应为这些用例共享。
面向对象分析 49✓画顺序图的启发式准则如下：
➢顺序图第一栏对应激活该用例的 参与者 ;
➢顺序图第二栏是 边界对象 ;
➢顺序图第三栏是管理用例中其他参与对象
的控制对象 ;
➢通过边界对象 来初始化用例 ，并创建 控制
对象 ;
➢通过控制对象 可创建其他 边界对象 ;
➢实体对象 允许边界对象 和控制对象 访问 ;
➢实体对象 不能访问 边界对象和控制对象 ;
面向对象分析 50借书用例的顺序图
:mainWindow :BorrowDialog :Title :Book :Borrower :Loan :Librarian
1:borrow()2:createDialog()
3:borrow()
4:findTitle(string)
5:getTitle()
6:getAvaliableBook()
7:findBorrower(string)
8:newLoan(OID, OID, Date)
9:store()
10:getBorrower(OID)
11:update()
12:addLoan(OID)
13:getObject(OID)
14:setLoan(OID)
15:update()
面向对象分析 51还书用例的顺序图
:mainWindow :ReturnDialog :Book :Borrower :Loan :Librarian
1:return()2:createDialog()
3:return()
4:findBook(Integer)
5:getObject(OID)
6:getLoan()
7:getBorrower()
8:setLoan(null)
9:update()
10:delLoan(OID)
11:update()
12:delete()
面向对象分析 525)  使用 CRC卡片对对象之间的交互建模
✓CRC是类、职责和协作的缩写。每一个类可
用一张 CRC卡片表示。
✓建立 CRC卡片有以下几个 步骤：
①识别类和职责 ： 首先识别类或对象，然后
从客户需求说明中寻找有关行为的描述，
以发现职责。
②将职责分配到类  ：记录在相应的卡片上。  
③找寻协作者 ：依次检查每一类承担的责任，
看是否需要其他类的帮助，找寻与每个类
协作的伙伴，并记录在相应卡片上。
面向对象分析 53职责   显示欢迎词             密码验证器
          接收磁卡                 菜单选择器
          让密码验证器检验
          启动菜单选择器
          退出磁卡    类名   读卡机                     协作
职责   从账户中取出密码        账户
          如无此账户返回假值
          提示客户输入密码
          读入密码
          比较核实 , 返回结果    类名   密码验证器                    协作
职责   检查账户有效性
          返回密码
          检查取款 /存款信息类名   账户
职责   显示菜单              存款管理器
          等待客户选择      取款管理器
          调用相应的
           存款 /取款管理器类名   菜单选择器          协作
职责   询问取款额           账户
          要求验证账户       出银机
          启动出银机发款类名   取款管理器           协作
面向对象分析 54④细化：模拟在执行每个基本功能时系统内
部出现的场景，以此推动细化工作的进行。
✓在模拟一个场景的过程中，每当一个类开始
“执行”时，它的卡片就被拿出来讨论，当
“控制”传送到另一个类时，注意力就从前
一张卡片转移到另一张上去了。不同的场景，
包括例外和出错状况，都应逐一加以模拟。
✓在这个过程中 可以验证已有的定义 ，不断发
现新的类、职责以及伙伴 。
✓在模拟不同的场景中会发现某些职责需要重
新加以分配。这些都导致进一步的开发工作。
面向对象分析 556)标识关系（结构）
✓使用类图，能够表示对象之间的关系。
✓关联表示了两个或多个类之间的关系。 标识关
联的启发式准则 如下：
➢检查指示状态的动词或动词短语；
➢准确地命名关联和角色；
➢尽量使用常用的修饰词标识出名字空间和关
键属性；
➢消除可导出其他关联的关联；
➢在关联集合稳定之前不必关心重复性；
➢过多的关联使得一个模型不可读；
面向对象分析 56a)建立系统的包图（主题）
➢建立包图是为了降低复杂性，目的是 控制可
见度及指引读者的思路 。
➢对于面向对象分析模型，主题表示此模型的
整体框架。可以是一个层次结构。
➢通过对主题的识别，可以让人们能够比较清
晰地了解大而复杂的模型 。
Library GUI
DataBase
面向对象分析 57b)建立边界类的类图
➢标明类之间的关系，包括关联、泛化等。
messageWindow
loginDialog returnDialog
borrowerDialog reserveDialog
mainWindow
findTDialogborrowDialog findBwrDialog
TitleDialog
面向对象分析 58c)建立实体类的类图
➢这些类与数据库相关，为了操作方便，以它们
为子类，建立一个持久类（ Persistent ）作为它
们的父类，共享与数据库相关的操作。
Book
BorrowerReservationTitle
LoanPersistent
(from DataBase )1
1
0..1*
0..*0..*0..*
0..*
1 1
面向对象分析 59d)建立边界类与实体类之间关系的类图
Book
(from Library)
11 0..1
* 0..*
1
Title
(from Library)Loan
(from Library)
Borrower
(from Library)Reservation
(from Library)BorrowDialog
(from GUI)
ReturnDialog
(from GUI)
面向对象分析 60Book
(from Library)
11 0..1
*0..*
1
Title
(from Library)Loan
(from Library)
Borrower
(from Library)
Reservation
(from Library)TitleDialog
(from GUI)findTDialog
(from GUI)
0..*0..*1
0..*
面向对象分析 617)标识属性
✓类的属性所描述的是状态信息，每个实例的属性
值表达了该实例的 状态值。
✓标识属性的启发性准则 如下：
➢每个对象至少需包含一个属性；
➢属性取值必需适合对象类的所有实例；
➢对象继承的属性必须与泛化关系一致；
➢系统的所有存储数据必须定义为属性；
➢对象的导出属性应当略去。例如，“年龄”是
由属性“出生年月”导出，不能作为基本属性
存在。
面向对象分析 628) 对每一对象的与状态有关的行为建模
✓对象收到消息后所能执行的操作称为它可提供的
服务。
✓对每个类的增加、修改、删除、选择等服务有时
是隐含的，在图中不标出，但实现类和对象时有
定义。
✓其它服务则必须显式地在图中画出。
①首先标识在每个类中 封装的服务 ;
②再比较服务与类的属性 ，验证其一致性。所
标识的类属性，它必然关联到某个服务，否
则该属性就形同虚设，永远不可能被访问 ;
面向对象分析 63③画出对象之间的消息通信路径，协调系统的行为。
➢自底向上方法 ：找出每一对象在其生存周期中
的所有状态 。每一状态的改变都关联到对象之
间消息的传递。 从对象着手，逐渐向上分析 。
➢自顶向下方法 ：一个对象必须识别系统中发生
或出现的事件，产生发送给其他对象的消息，
由那些对象作出响应。所以对象应具有能够接
收、处理、产生每个消息的服务。它是 从系统
行为着手，然后逐渐分析到对象 。
面向对象分析 64④使用顺序图或协作图，标识和描述对象之间的
相互通信，并进行运行走查。
面向对象分析 659) 分析模型评审
有关模型正确性的问题：
✓对实体对象的分类，用户是否能够理解 ?
✓抽象类是否对应到用户层的定义 ?
✓是否所有的描述均符合用户的定义 ?
✓是否所有的实体对象和边界对象都使用了有
实际含义的名词短语进行了命名 ?
✓是否所有的用例和控制对象都使用了有意义
的动词短语进行了命名 ?
✓是否所有的错误用例都已经描述和处理 ?
面向对象分析 66有关模型完备性的问题：
✓每一个对象是否有用例用到它？创建、修改
或删除该对象的用例是哪些？
✓每一个属性的类型是什么？它应进行修饰吗？
✓每一个关联何时被用到？其重复性的选择原
则是什么？该关联使用那一种连接？
✓每一个控制对象是否具有必要的关联，以连
接到用例中相关的其他对象？
面向对象分析 67有关模型一致性的问题：
✓是否有多个类或多个用例同名？
✓名字相近的实体（如类、对象、属性）能够
相互区别吗？
✓在同一泛化层次是否存在相似属性和关联的
对象？
面向对象分析 68有关模型可实现性的问题：
✓在该系统中性能需求和可靠性需求是否满足？
✓在选定硬件上运行原型是否可以确定需求？
